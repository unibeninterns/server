openapi: 3.0.0
info:
  title: DRID Research Portal API
  description: |
    A research management API for DRID
    Authentication is handled via JWT access tokens and HTTP-only cookie refresh tokens.
  version: 1.0.0
  contact:
    name: DRID Support
    email: raymondomoyakhi@gmail.com

servers:
  - url: 'https://production_url/api/v1'
    description: Production server
  - url: 'http://localhost:3000/api/v1'
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, researcher]
        faculty:
          type: string
        title:
          type: string
        profilePicture:
          type: string
        isActive:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    AdminAuthResponse:
      type: object
      properties:
        success:
          type: boolean
        accessToken:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            role:
              type: string

    ResearcherAuthResponse:
      type: object
      properties:
        success:
          type: boolean
        accessToken:
          type: string
        user:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            role:
              type: string
            faculty:
              type: string
            title:
              type: string
            profilePicture:
              type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        code:
          type: string

paths:
  /:
    get:
      summary: API health check
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /auth/admin/login:
    post:
      summary: Admin login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminAuthResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
                description: HTTP-only cookie containing refresh token
        '401':
          description: Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/researcher/login:
    post:
      summary: Researcher login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherAuthResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
                description: HTTP-only cookie containing refresh token
        '401':
          description: Invalid credentials or inactive account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh-token:
    post:
      summary: Refresh access token using refresh token cookie
      tags:
        - Authentication
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  accessToken:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                description: New HTTP-only refresh token cookie
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      summary: Logout user and invalidate tokens
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Clears refresh token cookie

  /auth/complete-profile/{token}:
    post:
      summary: Complete researcher profile after invitation
      tags:
        - Authentication
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: Invitation token sent to researcher's email
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [name, faculty, bio, title]
              properties:
                name:
                  type: string
                  description: Researcher's full name
                faculty:
                  type: string
                  description: Faculty or department
                title:
                  type: string
                  description: Academic or professional title
                bio:
                  type: string
                  description: Interests and areas of expertise
                profilePicture:
                  type: string
                  format: binary
                  description: Profile picture (JPEG, PNG, or JPG, max 5MB)
      responses:
        '200':
          description: Profile completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid or expired token, or invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/researchers/invite:
    post:
      summary: Invite a researcher (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Invitation sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid request or email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Add manually creating researcher profile
  /admin/researchers/add:
    post:
      summary: Add a researcher profile manually (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [email, name, faculty, title]
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                  description: Researcher's full name
                faculty:
                  type: string
                  description: Faculty or department
                title:
                  type: string
                  description: Academic or professional title
                bio:
                  type: string
                  description: Interests and areas of expertise
                profilePicture:
                  type: string
                  format: binary
                  description: Profile picture (JPEG, PNG, or JPG, max 3MB)
      responses:
        '201':
          description: Researcher profile created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      faculty:
                        type: string
                      title:
                        type: string
        '400':
          description: Invalid request or email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Get researchers list
  /admin/researchers:
    get:
      summary: Get all active researchers (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all active researchers
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        faculty:
                          type: string
                        title:
                          type: string
                        profilePicture:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        lastLogin:
                          type: string
                          format: date-time
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/researchers/{id}:
    delete:
      summary: Delete a researcher profile (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the researcher to delete
      responses:
        '200':
          description: Researcher profile deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Researcher not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  # Get pending invitations
  /admin/invitations:
    get:
      summary: Get all pending invitations (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of all pending invitations
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        status:
                          type: string
                          enum: [pending, expired]
                        created:
                          type: string
                          format: date
                        expires:
                          type: string
                          format: date
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Resend invitation
  /admin/invitations/{id}/resend:
    post:
      summary: Resend an invitation (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the invitation to resend
      responses:
        '200':
          description: Invitation resent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Invitation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Delete invitation
  /admin/invitations/{id}:
    delete:
      summary: Delete an invitation (admin only)
      tags:
        - Administration
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the invitation to delete
      responses:
        '200':
          description: Invitation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Invitation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - admin access required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
